import requests
import base64
import json
import time
from flask import Flask, request, jsonify
from datetime import date, timedelta


class CX:
    def __init__(self, phonenums, password):
        self.acc = phonenums
        self.pwd = password
        self.session = requests.session()
        self.session.headers = {
            'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 '
                          '(KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1',
        }
        self.login()

    def login(self):
        c_url = 'https://passport2.chaoxing.com/mlogin?' \
                'loginType=1&' \
                'newversion=true&fid=&' \
                'refer=http%3A%2F%2Foffice.chaoxing.com%2Ffront%2Fthird%2Fapps%2Fseat%2Findex'
        self.session.get(c_url).cookies.get_dict()
        data = {
            'fid': '-1',
            'uname': self.acc,
            'password': base64.b64encode(self.pwd.encode()).decode(),
            'refer': 'http%3A%2F%2Foffice.chaoxing.com%2Ffront%2Fthird%2Fapps%2Fseat%2Findex',
            't': 'true'
        }
        self.session.post('https://passport2.chaoxing.com/fanyalogin', data=data)
        s_url = 'https://office.chaoxing.com/front/third/apps/seat/index'
        self.session.get(s_url)

    # 签到
    def sign(self):
        info = self.get_my_seat_id()
        data_i = []
        for index in info:
            if index['status'] == 1:
                location = index['firstLevelName'] + index['secondLevelName'] + index['thirdLevelName'] + index['seatNum']
                return "{}:已经签过到了，快学习吧~".format(location)
            if index['status'] == 0 or index['status'] == 3 or index['status'] == 5:
                data_i.append(index)
                continue
        location = None
        seatid = None
        inital = 9999999999999
        if data_i:
            if len(data_i) >= 2:
                for index in data_i:
                    if int(index['startTime']) < inital:
                        inital = index['startTime']
                        seatid = index['id']
                        location = index['firstLevelName'] + index['secondLevelName'] + index['thirdLevelName'] + index['seatNum']
            else:
                seatid = data_i[-1]['id']
                location = data_i[-1]['firstLevelName'] + data_i[-1]['secondLevelName'] + data_i[-1]['thirdLevelName'] + data_i[-1]['seatNum']
            response = self.session.get(url='https://office.chaoxing.com/data/apps/seat/sign?id={}'.format(seatid))
            if response.json()['success']:
                log(self.acc, '签到', '成功', location)
                return "{}：签到成功".format(location)
            return "{}：{}".format(location, response.json()['msg'])
        return "没有座位可以签到"

    # 暂离
    def leave(self):
        info = self.get_my_seat_id()
        for index in info:
            if index['status'] == 1:
                location = index['firstLevelName'] + index['secondLevelName'] + index['thirdLevelName'] + index[
                    'seatNum']
                response = self.session.get(
                    url='https://office.chaoxing.com/data/apps/seat/leave?id={}'.format(index['id']))
                if response.json()['success']:
                    return "{}：暂离成功".format(location)
                return "{}：{}".format(location, response.json()['msg'])
        return "当前没有座位可暂离"

    # 退座
    def signback(self):
        info = self.get_my_seat_id()
        for index in info:
            if index['status'] == 1 or index['status'] == 3 or index['status'] == 5:
                location = index['firstLevelName'] + index['secondLevelName'] + index['thirdLevelName'] + index[
                    'seatNum']
                response = self.session.get(
                    url='https://office.chaoxing.com/data/apps/seat/signback?id={}'.format(index['id']))
                if response.json()['success']:
                    return "{}：座位已退出".format(location)
                return "{}：{}".format(location, response.json()['msg'])
        return "当前没有座位可退"

    # 取消
    def cancel(self):
        info = self.get_my_seat_id()
        for index in info:
            if index['status'] == 0 or index['status'] == 3 or index['status'] == 5:
                location = index['firstLevelName'] + index['secondLevelName'] + index['thirdLevelName'] + index[
                    'seatNum']
                response = self.session.get(
                    url='https://office.chaoxing.com/data/apps/seat/cancel?id={}'.format(index['id']))
                if response.json()['success']:
                    return "{}：座位已取消".format(location)
                return "{}：{}".format(location, response.json()['msg'])
        return "当前没有座位可取消"

    # 获取到最近一次预约的座位ID
    def get_my_seat_id(self):
        response = self.session.get(url='https://office.chaoxing.com/data/apps/seat/reservelist?'
                                        'indexId=0&'
                                        'pageSize=100&'
                                        'type=-1').json()['data']['reserveList']
        result = []
        for index in response:
            if index['type'] == -1:
                if index['today'] == time.strftime('%F', time.localtime(time.time())) or index['today'] == (date.today() + timedelta(days=+1)).strftime("%Y-%m-%d"):
                    result.append(index)
        return result


if __name__ == '__main__':
    app = Flask(__name__)


    @app.route("/sign", methods=["POST"])
    def sign():
        try:
            if request.method == "POST":
                res = request.get_json()
                if res["phonenums"] and res["key"]:
                    try:
                        mycx = CX(res["phonenums"], res["key"])
                        msg = mycx.sign()
                        del mycx
                        return jsonify(msg=msg, value="True")
                    except:
                        return jsonify(msg="手机号或密码错误", value="False")
                else:
                    return jsonify(msg="参数不正确", value="False")
            else:
                return jsonify(msg="请求方式必须是POST", value="False")
        except:
            return jsonify(msg="参数不正确", value="False")


    @app.route("/leave", methods=["POST"])
    def leave():
        try:
            if request.method == "POST":
                res = request.get_json()
                if res["phonenums"] and res["key"]:
                    try:
                        mycx = CX(res["phonenums"], res["key"])
                        msg = mycx.leave()
                        del mycx
                        return jsonify(msg=msg, value="True")
                    except:
                        return jsonify(msg="手机号或密码错误", value="False")
                else:
                    return jsonify(msg="参数不正确", value="False")
            else:
                return jsonify(msg="请求方式必须是POST", value="False")
        except:
            return jsonify(msg="参数不正确", value="False")


    @app.route("/signback", methods=["POST"])
    def signback():
        try:
            if request.method == "POST":
                res = request.get_json()
                if res["phonenums"] and res["key"]:
                    try:
                        mycx = CX(res["phonenums"], res["key"])
                        msg = mycx.signback()
                        del mycx
                        return jsonify(msg=msg, value="True")
                    except:
                        return jsonify(msg="手机号或密码错误", value="False")
                else:
                    return jsonify(msg="参数不正确", value="False")
            else:
                return jsonify(msg="请求方式必须是POST", value="False")
        except:
            return jsonify(msg="参数不正确", value="False")


    @app.route("/cancel", methods=["POST"])
    def cancel():
        try:
            if request.method == "POST":
                res = request.get_json()
                if res["phonenums"] and res["key"]:
                    try:
                        mycx = CX(res["phonenums"], res["key"])
                        msg = mycx.cancel()
                        del mycx
                        return jsonify(msg=msg, value="True")
                    except:
                        return jsonify(msg="手机号或密码错误", value="False")
                else:
                    return jsonify(msg="参数不正确", value="False")
            else:
                return jsonify(msg="请求方式必须是POST", value="False")
        except:
            return jsonify(msg="参数不正确", value="False")


    app.run(host="0.0.0.0", port=12345, ssl_context=('*****.pem', '*****.key'))
